{"version":3,"sources":["components/Statistics/Statistics.module.css","components/Button/Button.module.css","components/Notification/Notification.module.css","components/Section/Section.jsx","components/Button/Button.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Statistics/Statistics.jsx","components/Notification/Notification.jsx","App.js","index.js"],"names":["module","exports","Section","title","children","className","styles","section","Button","name","onLeaveFeedback","type","onClick","btn","FeedbackOptions","btnNames","map","btnName","Statistics","good","neutral","bad","total","positivePercentage","wrapper","span","Notification","message","text","defaultProps","App","state","addFeedback","e","setState","prevState","target","countTotalFeedback","countPositiveFeedbackPercentage","Math","floor","this","Object","keys","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0IACAA,EAAOC,QAAU,CAAC,QAAU,8B,wCCA5BD,EAAOC,QAAU,CAAC,IAAM,sB,gBCAxBD,EAAOC,QAAU,CAAC,KAAO,6B,6JCeVC,EAbC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,0BAASC,UAAWC,IAAOC,QAA3B,UACGJ,GAAS,oBAAIE,UAAWC,IAAOH,MAAtB,SAA8BA,IACvCC,M,gBCaQI,EAjBA,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,KAAMC,EAAsB,EAAtBA,gBACtB,OACE,wBACEC,KAAK,SACLF,KAAMA,EACNG,QAASF,EACTL,UAAWC,IAAOO,IAJpB,SAMGJ,KCWQK,EAnBS,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,SAAUL,EAAsB,EAAtBA,gBACnC,OACE,qBAAKL,UAAU,aAAf,SACGU,EAASC,KAAI,SAAAC,GAAO,OACnB,cAAC,EAAD,CAEER,KAAMQ,EACNP,gBAAiBA,GAFZO,S,gBCSAC,EAdI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,sBAAKlB,UAAWC,IAAOkB,QAAvB,UACE,uBAAMnB,UAAWC,IAAOmB,KAAxB,mBAAqCN,KACrC,uBAAMd,UAAWC,IAAOmB,KAAxB,sBAAwCL,KACxC,uBAAMf,UAAWC,IAAOmB,KAAxB,kBAAoCJ,KACpC,uBAAMhB,UAAWC,IAAOmB,KAAxB,oBAAsCH,KACtC,uBAAMjB,UAAWC,IAAOmB,KAAxB,gCACsBF,EADtB,W,iBCPAG,EAAe,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACvB,OAAO,mBAAGtB,UAAWC,IAAOsB,KAArB,SAA4BD,KAGpCD,EAAaG,aAAe,CAC3BF,QAAS,eAOKD,QCRTI,G,kNACJC,MAAQ,CACNZ,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPW,YAAc,SAAAC,GACZ,EAAKC,UAAS,SAAAC,GAAS,sBACpBF,EAAEG,OAAO3B,KAAO0B,EAAUF,EAAEG,OAAO3B,MAAQ,O,EAIhD4B,mBAAqB,WACnB,OAAO,EAAKN,MAAMZ,KAAO,EAAKY,MAAMX,QAAU,EAAKW,MAAMV,K,EAG3DiB,gCAAkC,WAChC,OAAOC,KAAKC,MAAO,EAAKT,MAAMZ,KAAO,EAAKkB,qBAAwB,M,4CAGpE,WACE,OACE,sBAAKhC,UAAU,aAAf,UACE,cAAC,EAAD,CAASF,MAAM,wBAAf,SACE,cAAC,EAAD,CACEO,gBAAiB+B,KAAKT,YACtBjB,SAAU2B,OAAOC,KAAKF,KAAKV,WAG/B,cAAC,EAAD,CAAS5B,MAAM,aAAf,SACGsC,KAAKJ,qBAAuB,EAC3B,cAAC,EAAD,CACElB,KAAMsB,KAAKV,MAAMZ,KACjBC,QAASqB,KAAKV,MAAMX,QACpBC,IAAKoB,KAAKV,MAAMV,IAChBC,MAAOmB,KAAKJ,qBACZd,mBAAoBkB,KAAKH,oCAG3B,cAAC,EAAD,CAAcX,QAAQ,yB,GAxChBiB,cAgDHd,IClDfe,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.1e535965.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Statistics_wrapper__MuFte\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"Button_btn__33KTs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"Notification_text__1pT9q\"};","import PropTypes from 'prop-types';\r\nimport styles from './Section.module.css';\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <section className={styles.section}>\r\n      {title && <h1 className={styles.title}>{title}</h1>}\r\n      {children}\r\n    </section>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n};\r\n\r\nexport default Section;\r\n","import PropTypes from 'prop-types';\r\nimport styles from './Button.module.css';\r\n\r\nconst Button = ({ name, onLeaveFeedback }) => {\r\n  return (\r\n    <button\r\n      type=\"button\"\r\n      name={name}\r\n      onClick={onLeaveFeedback}\r\n      className={styles.btn}\r\n    >\r\n      {name}\r\n    </button>\r\n  );\r\n};\r\n\r\nButton.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Button;\r\n","import Button from '../Button/Button';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst FeedbackOptions = ({ btnNames, onLeaveFeedback }) => {\r\n  return (\r\n    <div className=\"btnWrapper\">\r\n      {btnNames.map(btnName => (\r\n        <Button\r\n          key={btnName}\r\n          name={btnName}\r\n          onLeaveFeedback={onLeaveFeedback}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nFeedbackOptions.propTypes = {\r\n  btnNames: PropTypes.array.isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import PropTypes from 'prop-types';\r\nimport styles from './Statistics.module.css';\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\r\n  return (\r\n    <div className={styles.wrapper}>\r\n      <span className={styles.span}>Good: {good}</span>\r\n      <span className={styles.span}>Neutral: {neutral}</span>\r\n      <span className={styles.span}>Bad: {bad}</span>\r\n      <span className={styles.span}>Total: {total}</span>\r\n      <span className={styles.span}>\r\n        Positive feedback: {positivePercentage}%\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Statistics;\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport styles from './Notification.module.css';\r\n\r\nconst Notification = ({ message }) => {\r\n\treturn <p className={styles.text}>{message}</p>;\r\n};\r\n\r\nNotification.defaultProps = {\r\n\tmessage: 'No feedback',\r\n};\r\n\r\nNotification.propTypes = {\r\n\tmessage: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Notification;\r\n","import React, { Component } from 'react';\nimport Section from './components/Section/index';\nimport FeedbackOptions from './components/FeedbackOptions/FeedbackOptions';\nimport Statistics from './components/Statistics/';\nimport Notification from './components/Notification/';\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  addFeedback = e => {\n    this.setState(prevState => ({\n      [e.target.name]: prevState[e.target.name] + 1,\n    }));\n  };\n\n  countTotalFeedback = () => {\n    return this.state.good + this.state.neutral + this.state.bad;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    return Math.floor((this.state.good / this.countTotalFeedback()) * 100);\n  };\n\n  render() {\n    return (\n      <div className=\"appWrapper\">\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            onLeaveFeedback={this.addFeedback}\n            btnNames={Object.keys(this.state)}\n          ></FeedbackOptions>\n        </Section>\n        <Section title=\"Statistics\">\n          {this.countTotalFeedback() > 0 ? (\n            <Statistics\n              good={this.state.good}\n              neutral={this.state.neutral}\n              bad={this.state.bad}\n              total={this.countTotalFeedback()}\n              positivePercentage={this.countPositiveFeedbackPercentage()}\n            ></Statistics>\n          ) : (\n            <Notification message=\"No feedback\"></Notification>\n          )}\n        </Section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}