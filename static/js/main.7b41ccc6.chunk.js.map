{"version":3,"sources":["components/Statistics/Statistics.module.css","components/Button/Button.module.css","components/Notification/Notification.module.css","components/Section/Section.jsx","components/Button/Button.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Statistics/Statistics.jsx","components/Notification/Notification.jsx","App.js","index.js"],"names":["module","exports","Section","title","children","className","styles","section","Button","name","onLeaveFeedback","type","onClick","btn","FeedbackOptions","btnNames","map","btnName","Statistics","good","neutral","bad","total","positivePercentage","wrapper","span","Notification","message","text","defaultProps","App","useState","setGood","setNeutral","setBad","countTotalFeedback","prevState","Math","floor","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2IACAA,EAAOC,QAAU,CAAC,QAAU,8B,qCCA5BD,EAAOC,QAAU,CAAC,IAAM,sB,gBCAxBD,EAAOC,QAAU,CAAC,KAAO,6B,6HCeVC,EAbC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,0BAASC,UAAWC,IAAOC,QAA3B,UACGJ,GAAS,oBAAIE,UAAWC,IAAOH,MAAtB,SAA8BA,IACvCC,M,gBCcQI,EAlBA,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,KAAMC,EAAsB,EAAtBA,gBACvB,OACC,wBACCC,KAAK,SACLF,KAAMA,EACNG,QAAS,kBAAMF,EAAgBD,IAC/BJ,UAAWC,IAAOO,IAJnB,SAMEJ,KCWWK,EAnBS,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,SAAUL,EAAsB,EAAtBA,gBACnC,OACE,qBAAKL,UAAU,aAAf,SACGU,EAASC,KAAI,SAAAC,GAAO,OACnB,cAAC,EAAD,CAEER,KAAMQ,EACNP,gBAAiBA,GAFZO,S,gBCSAC,EAdI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,sBAAKlB,UAAWC,IAAOkB,QAAvB,UACE,uBAAMnB,UAAWC,IAAOmB,KAAxB,mBAAqCN,KACrC,uBAAMd,UAAWC,IAAOmB,KAAxB,sBAAwCL,KACxC,uBAAMf,UAAWC,IAAOmB,KAAxB,kBAAoCJ,KACpC,uBAAMhB,UAAWC,IAAOmB,KAAxB,oBAAsCH,KACtC,uBAAMjB,UAAWC,IAAOmB,KAAxB,gCACsBF,EADtB,W,gBCPAG,EAAe,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACvB,OAAO,mBAAGtB,UAAWC,IAAOsB,KAArB,SAA4BD,KAGpCD,EAAaG,aAAe,CAC3BF,QAAS,eAOKD,Q,MC6CAI,MArDf,WACC,MAAwBC,mBAAS,GAAjC,mBAAOZ,EAAP,KAAaa,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAOX,EAAP,KAAgBa,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAOV,EAAP,KAAYa,EAAZ,KAoBMC,EAAqB,kBAAMhB,EAAOC,EAAUC,GAMlD,OACC,sBAAKhB,UAAU,aAAf,UACC,cAAC,EAAD,CAASF,MAAM,wBAAf,SACC,cAAC,EAAD,CACCO,gBA1BgB,SAAAO,GACnB,OAAQA,GACP,IAAK,OACJe,GAAQ,SAAAI,GAAS,OAAIA,EAAY,KACjC,MACD,IAAK,UACJH,GAAW,SAAAG,GAAS,OAAIA,EAAY,KACpC,MACD,IAAK,MACJF,GAAO,SAAAE,GAAS,OAAIA,EAAY,KAChC,MACD,QACC,SAeCrB,SA7BiB,CAAC,OAAQ,UAAW,WAgCvC,cAAC,EAAD,CAASZ,MAAM,aAAf,SACEgC,IAAuB,EACvB,cAAC,EAAD,CACChB,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOa,IACPZ,mBAlBGc,KAAKC,MAAOnB,EAAOgB,IAAwB,OAqB/C,cAAC,EAAD,CAAcR,QAAQ,sBCjD3BY,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.7b41ccc6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Statistics_wrapper__MuFte\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"Button_btn__33KTs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"Notification_text__1pT9q\"};","import PropTypes from 'prop-types';\r\nimport styles from './Section.module.css';\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <section className={styles.section}>\r\n      {title && <h1 className={styles.title}>{title}</h1>}\r\n      {children}\r\n    </section>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n};\r\n\r\nexport default Section;\r\n","import PropTypes from 'prop-types';\r\nimport styles from './Button.module.css';\r\n\r\nconst Button = ({ name, onLeaveFeedback }) => {\r\n\treturn (\r\n\t\t<button\r\n\t\t\ttype='button'\r\n\t\t\tname={name}\r\n\t\t\tonClick={() => onLeaveFeedback(name)}\r\n\t\t\tclassName={styles.btn}\r\n\t\t>\r\n\t\t\t{name}\r\n\t\t</button>\r\n\t);\r\n};\r\n\r\nButton.propTypes = {\r\n\tname: PropTypes.string.isRequired,\r\n\tonLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Button;\r\n","import Button from '../Button/Button';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst FeedbackOptions = ({ btnNames, onLeaveFeedback }) => {\r\n  return (\r\n    <div className=\"btnWrapper\">\r\n      {btnNames.map(btnName => (\r\n        <Button\r\n          key={btnName}\r\n          name={btnName}\r\n          onLeaveFeedback={onLeaveFeedback}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nFeedbackOptions.propTypes = {\r\n  btnNames: PropTypes.array.isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import PropTypes from 'prop-types';\r\nimport styles from './Statistics.module.css';\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\r\n  return (\r\n    <div className={styles.wrapper}>\r\n      <span className={styles.span}>Good: {good}</span>\r\n      <span className={styles.span}>Neutral: {neutral}</span>\r\n      <span className={styles.span}>Bad: {bad}</span>\r\n      <span className={styles.span}>Total: {total}</span>\r\n      <span className={styles.span}>\r\n        Positive feedback: {positivePercentage}%\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Statistics;\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport styles from './Notification.module.css';\r\n\r\nconst Notification = ({ message }) => {\r\n\treturn <p className={styles.text}>{message}</p>;\r\n};\r\n\r\nNotification.defaultProps = {\r\n\tmessage: 'No feedback',\r\n};\r\n\r\nNotification.propTypes = {\r\n\tmessage: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Notification;\r\n","import { useState } from 'react';\nimport Section from './components/Section/index';\nimport FeedbackOptions from './components/FeedbackOptions/FeedbackOptions';\nimport Statistics from './components/Statistics/';\nimport Notification from './components/Notification/';\nimport './App.css';\n\nfunction App() {\n\tconst [good, setGood] = useState(0);\n\tconst [neutral, setNeutral] = useState(0);\n\tconst [bad, setBad] = useState(0);\n\n\tconst feedbackType = ['Good', 'Neutral', 'Bad'];\n\n\tconst addFeedback = btnName => {\n\t\tswitch (btnName) {\n\t\t\tcase 'Good':\n\t\t\t\tsetGood(prevState => prevState + 1);\n\t\t\t\tbreak;\n\t\t\tcase 'Neutral':\n\t\t\t\tsetNeutral(prevState => prevState + 1);\n\t\t\t\tbreak;\n\t\t\tcase 'Bad':\n\t\t\t\tsetBad(prevState => prevState + 1);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\treturn;\n\t\t}\n\t};\n\n\tconst countTotalFeedback = () => good + neutral + bad;\n\n\tconst countPositiveFeedbackPercentage = () => {\n\t\treturn Math.floor((good / countTotalFeedback()) * 100);\n\t};\n\n\treturn (\n\t\t<div className='appWrapper'>\n\t\t\t<Section title='Please leave feedback'>\n\t\t\t\t<FeedbackOptions\n\t\t\t\t\tonLeaveFeedback={addFeedback}\n\t\t\t\t\tbtnNames={feedbackType}\n\t\t\t\t></FeedbackOptions>\n\t\t\t</Section>\n\t\t\t<Section title='Statistics'>\n\t\t\t\t{countTotalFeedback() > 0 ? (\n\t\t\t\t\t<Statistics\n\t\t\t\t\t\tgood={good}\n\t\t\t\t\t\tneutral={neutral}\n\t\t\t\t\t\tbad={bad}\n\t\t\t\t\t\ttotal={countTotalFeedback()}\n\t\t\t\t\t\tpositivePercentage={countPositiveFeedbackPercentage()}\n\t\t\t\t\t></Statistics>\n\t\t\t\t) : (\n\t\t\t\t\t<Notification message='No feedback'></Notification>\n\t\t\t\t)}\n\t\t\t</Section>\n\t\t</div>\n\t);\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}